// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChecklistItemInput /> ChecklistItemInput renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderColor": "black",
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 70,
        "justifyContent": "space-between",
        "marginBottom": 3,
      },
      {},
      {},
    ]
  }
>
  <TextInput
    onChangeText={[Function]}
    value="title"
  />
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "borderStartColor": "black",
          "borderStartWidth": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": 50,
        }
      }
    >
      <Text />
      <View
        style={
          {
            "borderColor": "gray",
            "borderWidth": 1,
            "position": "absolute",
            "transform": [
              {
                "rotate": "45deg",
              },
            ],
            "width": "100%",
          }
        }
      />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "borderStartColor": "black",
          "borderStartWidth": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": 50,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;
