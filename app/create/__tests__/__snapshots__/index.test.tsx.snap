// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateChecklist /> Index renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "alignItems": "center",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "justifyContent": "flex-start",
        "width": "80%",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "marginVertical": 10,
        }
      }
    >
      <TextInput
        maxLength={16}
        onChangeText={[Function]}
        style={
          {
            "borderColor": "black",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 24,
            "width": "100%",
          }
        }
        value="New List"
      />
    </View>
    <View>
      <RCTScrollView
        data={
          [
            {
              "id": undefined,
              "parentTo": [],
              "required": false,
              "status": false,
              "title": "Item 1",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        style={
          {
            "height": "70%",
          }
        }
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "borderColor": "black",
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "height": 70,
                    "justifyContent": "space-between",
                    "marginBottom": 3,
                  },
                  {
                    "borderTopEndRadius": 10,
                    "borderTopStartRadius": 10,
                  },
                  {
                    "borderBottomEndRadius": 10,
                    "borderBottomStartRadius": 10,
                  },
                ]
              }
            >
              <TextInput
                onChangeText={[Function]}
                value="Item 1"
              />
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": "100%",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "borderStartColor": "black",
                      "borderStartWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "width": 50,
                    }
                  }
                >
                  <Text />
                  <View
                    style={
                      {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "position": "absolute",
                        "transform": [
                          {
                            "rotate": "45deg",
                          },
                        ],
                        "width": "100%",
                      }
                    }
                  />
                </View>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "borderStartColor": "black",
                      "borderStartWidth": 1,
                      "height": "100%",
                      "justifyContent": "center",
                      "width": 50,
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderColor": "black",
            "borderRadius": 25,
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "marginVertical": 10,
            "width": 40,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "borderColor": "black",
            "borderRadius": 10,
            "borderWidth": 1,
            "padding": 20,
            "width": 140,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 24,
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          Create
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
